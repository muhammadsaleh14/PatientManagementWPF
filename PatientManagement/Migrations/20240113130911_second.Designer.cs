// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientManagement.Models.Contexts;

#nullable disable

namespace PatientManagement.Migrations
{
    [DbContext(typeof(PatientContext))]
    [Migration("20240113130911_second")]
    partial class second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.26");

            modelBuilder.Entity("PatientManagement.Models.DataEntites.Patient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PatientManagement.Models.DataEntites.PatientRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientRecordDetail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientRecordHeadingId")
                        .HasColumnType("TEXT");

                    b.Property<string>("VisitId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientRecordHeadingId");

                    b.HasIndex("VisitId");

                    b.ToTable("PatientRecord");
                });

            modelBuilder.Entity("PatientManagement.Models.DataEntites.PatientRecordHeading", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeadingValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PatientRecordHeading");
                });

            modelBuilder.Entity("PatientManagement.Models.DataEntites.Visit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Visit");
                });

            modelBuilder.Entity("PatientManagement.Models.Prescription", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrescriptionValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VisitId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VisitId");

                    b.ToTable("Prescription");
                });

            modelBuilder.Entity("PatientManagement.Models.DataEntites.PatientRecord", b =>
                {
                    b.HasOne("PatientManagement.Models.DataEntites.PatientRecordHeading", "PatientRecordHeading")
                        .WithMany()
                        .HasForeignKey("PatientRecordHeadingId");

                    b.HasOne("PatientManagement.Models.DataEntites.Visit", null)
                        .WithMany("PatientRecords")
                        .HasForeignKey("VisitId");

                    b.Navigation("PatientRecordHeading");
                });

            modelBuilder.Entity("PatientManagement.Models.DataEntites.Visit", b =>
                {
                    b.HasOne("PatientManagement.Models.DataEntites.Patient", null)
                        .WithMany("Visits")
                        .HasForeignKey("PatientId");
                });

            modelBuilder.Entity("PatientManagement.Models.Prescription", b =>
                {
                    b.HasOne("PatientManagement.Models.DataEntites.Visit", null)
                        .WithMany("Prescriptions")
                        .HasForeignKey("VisitId");
                });

            modelBuilder.Entity("PatientManagement.Models.DataEntites.Patient", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("PatientManagement.Models.DataEntites.Visit", b =>
                {
                    b.Navigation("PatientRecords");

                    b.Navigation("Prescriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
